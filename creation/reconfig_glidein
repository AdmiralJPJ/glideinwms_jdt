#!/bin/env python

#
# Description:
#  This program updates a glidein factory directory structure
#  based on a configuration file
#

import os
import copy
import sys

STARTUP_DIR=sys.path[0]

import os.path
import string
import shutil
import traceback
sys.path.append(os.path.join(STARTUP_DIR,"lib"))
sys.path.append(os.path.join(STARTUP_DIR,"../lib"))
import cgWParams
import cgWDictFile
import cgWConsts
import cgWCreate
import cgWParamDict


################################################################################

def main(params,old_params):
    # load old files
    old_glidein_dicts_obj=cgWParamDict.glideinDicts(old_params)
    old_glidein_dicts_obj.load()

    # create dictionaries for new params
    glidein_dicts_obj=cgWParamDict.glideinDicts(params)
    glidein_dicts_obj.populate()

    # merge them together
    glidein_dicts_obj.reuse(old_glidein_dicts_obj)

    # write to disk
    glidein_dicts_obj.save()
    glidein_dicts_obj.set_readonly(True)

    # save config into file
    cfgfile=os.path.join(glidein_dicts_obj.main_dicts.submit_dir,cgWConsts.XML_CONFIG_FILE)
    params.save_into_file(cfgfile)
    # make two copies, the second one should have a unique name, so it does not get overwritten on further reconfig
    cfgfile=cgWConsts.insert_timestr(cfgfile)
    params.save_into_file(cfgfile)

    print "Reconfigured glidein '%s'"%params.glidein_name
    print "Active entries are:"
    for entry in glidein_dicts_obj.active_entry_list:
        print "  %s"%entry
    print "Submit files are in %s"%glidein_dicts_obj.main_dicts.submit_dir


############################################################
#
# S T A R T U P
# 
############################################################

if __name__ == '__main__':
    try:
        params=cgWParams.Params("reconfig_glidein",os.path.join(STARTUP_DIR,"web_base"),sys.argv)
    except RuntimeError,e:
        print e
        sys.exit(1)
    try:
        old_config_file=os.path.join(params.submit_dir,cgWConsts.XML_CONFIG_FILE)
        if os.path.exists(old_config_file):
            try:
                old_params=cgWParams.Params("reconfig_glidein",os.path.join(STARTUP_DIR,"web_base"),[sys.argv[0],old_config_file])
            except RuntimeError, e:
                raise RuntimeError,"Failed to load %s"%old_config_file
        else:
            raise RuntimeError,"Cannot find %s"%old_config_file
        main(params,old_params)
    except RuntimeError, e:
        print params.usage()
        print ""
        print e

###########################################################
#
# CVS info
#
# $Id: reconfig_glidein,v 1.11 2008/07/15 20:49:46 sfiligoi Exp $
#
# Log:
#  $Log: reconfig_glidein,v $
#  Revision 1.11  2008/07/15 20:49:46  sfiligoi
#  Improve usage printout
#
#  Revision 1.10  2008/07/11 15:49:10  sfiligoi
#  Printout active entries during creation and reconfig
#
#  Revision 1.9  2008/07/10 19:21:17  sfiligoi
#  Make it executable from any disk location
#
#  Revision 1.8  2008/07/10 18:57:47  sfiligoi
#  Move all path changes out of the libraries
#
#  Revision 1.7  2008/07/10 18:41:45  sfiligoi
#  Make it executable from any disk location
#
#  Revision 1.6  2008/07/07 20:30:05  sfiligoi
#  Add comments
#
#  Revision 1.5  2008/03/28 17:13:43  sfiligoi
#  Save the cfg file with a timestamp, too
#
#  Revision 1.4  2007/12/26 15:54:38  sfiligoi
#  Save config file
#
#  Revision 1.3  2007/12/21 11:36:10  sfiligoi
#  Fix bug
#
#  Revision 1.2  2007/12/21 11:29:58  sfiligoi
#  Try two
#
#  Revision 1.1  2007/12/20 16:42:34  sfiligoi
#  First try
#
###########################################################
