#!/bin/env python

import popen2
import os
import copy
import sys
import os.path
import string
import shutil
import traceback
sys.path.append("lib")
import cgWParams
import cgWDictFile
import cgWConsts
import cgWCreate
import cgWParamDict


################################################################################

def main(params):
    #print params.__dict__
    glidein_dicts_obj=cgWParamDict.glideinDicts(params)
    glidein_dicts_obj.populate()

    create_dir(glidein_dicts_obj.main_dicts.submit_dir)
    try:
        # create log submit subdir
        create_dir(os.path.join(glidein_dicts_obj.main_dicts.submit_dir,"log")) # no try/except needed, will be deleted by external except if needed

        # create entry dirs, including internal log dirs
        for entry_name in glidein_dicts_obj.entry_list:
            entry_dir=glidein_dicts_obj.entry_dicts[entry_name].submit_dir
            create_dir(entry_dir)
            create_dir(os.path.join(entry_dir,"log"))
        
        create_dir(glidein_dicts_obj.main_dicts.stage_dir)
        try:
            # create entry dirs
            for entry_name in glidein_dicts_obj.entry_list:
                entry_dir=glidein_dicts_obj.entry_dicts[entry_name].stage_dir
                create_dir(entry_dir) # no try/except needed, will be deleted by external except if needed

            create_dir(glidein_dicts_obj.main_dicts.monitor_dir)
            try:
               # create entry dirs
               for entry_name in glidein_dicts_obj.entry_list:
                   entry_dir=glidein_dicts_obj.entry_dicts[entry_name].monitor_dir
                   create_dir(entry_dir) # no try/except needed, will be deleted by external except if needed
                    
               # make a link from the submit dir to the monitor dir
               symlink_file(glidein_dicts_obj.main_dicts.monitor_dir,os.path.join(glidein_dicts_obj.main_dicts.submit_dir)+"/monitor")

               # save files in dictionaries
               glidein_dicts_obj.save()
               glidein_dicts_obj.set_readonly(True)

               # copy the submit files
               copy_submit_file(cgWConsts.STARTUP_FILE,glidein_dicts_obj.main_dicts.submit_dir,params.src_dir)
               copy_submit_file(cgWConsts.SUBMIT_WRAPPER,glidein_dicts_obj.main_dicts.submit_dir,params.src_dir)

               cgWCreate.create_submit_wrapper(glidein_dicts_obj.main_dicts.submit_dir)

               params.save_into_file(os.path.join(glidein_dicts_obj.main_dicts.submit_dir,cgWConsts.XML_CONFIG_FILE))
            except:
               shutil.rmtree(glidein_dicts_obj.main_dicts.monitor_dir)
               raise
        except:
            shutil.rmtree(glidein_dicts_obj.main_dicts.stage_dir)
            raise
    except:
        shutil.rmtree(glidein_dicts_obj.main_dicts.submit_dir)
        raise

    print "Created glidein '%s'"%params.glidein_name
    print "Submit files can be found in %s"%glidein_dicts_obj.main_dicts.submit_dir
    print "Support files are in %s"%glidein_dicts_obj.main_dicts.stage_dir
    print "Monitoring files are in %s"%glidein_dicts_obj.main_dicts.monitor_dir


############################################################
#
# P R I V A T E - Do not use
# 
############################################################


#####################
# Simply create a dir
def create_dir(dirname):
    try:
        os.mkdir(dirname)
    except OSError, e:
        raise RuntimeError, "Cannot create dir %s: %s"%(dirname,e)

#####################
# Simply copy a file
def copy_file(infile,outfile):
    try:
        shutil.copy2(infile,outfile)
    except IOError, e:
        raise RuntimeError, "Error copying %s in %s: %s"%(infile,outfile,e)
        
#######################
# Simply symlink a file
def symlink_file(infile,outfile):
    try:
        os.symlink(infile,outfile)
    except IOError, e:
        raise RuntimeError, "Error symlink %s in %s: %s"%(infile,outfile,e)
        

#####################
# Copy a regular file
def copy_submit_file(filename,submit_dir,org_dir):
    copy_file(os.path.join(org_dir,filename),submit_dir)

    
############################################################
#
# S T A R T U P
# 
############################################################

if __name__ == '__main__':
    try:
        params=cgWParams.Params(sys.argv)
    except RuntimeError,e:
        print e
        sys.exit(1)
    try:
        main(params)
    except RuntimeError, e:
        print params.usage()
        print ""
        print e

###########################################################
#
# CVS info
#
# $Id: create_glidein,v 1.121 2007/12/13 23:26:20 sfiligoi Exp $
#
# Log:
#  $Log: create_glidein,v $
#  Revision 1.121  2007/12/13 23:26:20  sfiligoi
#  Get attributes out of stage and only into submit
#
#  Revision 1.119  2007/12/13 20:19:45  sfiligoi
#  Move condor jdl into entry subdir, and implement it via a dictionary
#
#  Revision 1.118  2007/12/12 00:35:36  sfiligoi
#  Move creation of glidein and job_descript files from cgWCreate to cgWParamDict
#
#  Revision 1.117  2007/12/11 23:57:11  sfiligoi
#  Get directories always from glidein_dicts_obj
#
#  Revision 1.116  2007/12/11 23:52:40  sfiligoi
#  Create monitor_dir in a single place
#
#  Revision 1.115  2007/12/11 23:47:52  sfiligoi
#  Rename entry_dirs to have local scope
#
#  Revision 1.114  2007/12/11 23:31:46  sfiligoi
#  Create entry_dirs in a single place
#
#  Revision 1.113  2007/12/11 23:26:25  sfiligoi
#  Consistently use entry_dirs
#
#  Revision 1.111  2007/12/11 23:09:54  sfiligoi
#  Move the population of dictionaries into cgWParamDict
#
#  Revision 1.74  2007/05/18 19:07:18  sfiligoi
#  Add CVS tags
#
#
###########################################################
